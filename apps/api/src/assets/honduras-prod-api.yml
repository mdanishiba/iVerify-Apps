---
openapi: 3.0.0
info:
  title: iVerify
  description: The iVerify API description
  version: '1.0'
  contact: {}
tags:
- name: iVerify
  description: ''
servers:
- url: 'https://api-undpjtf-iverify-honduras-js.leman.un-icc.cloud/'
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    CreateUserDto:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        phone:
          type: string
        address:
          type: string
        email:
          type: string
        password:
          type: string
        roles:
          type: array
          items:
            type: string
      required:
      - firstName
      - lastName
      - email
      - password
      - roles
    UpdateUserDto:
      type: object
      properties: {}
    DateBraket:
      type: object
      properties:
        startDate:
          type: string
        endDate:
          type: string
      required:
      - startDate
      - endDate
    DayDto:
      type: object
      properties:
        day:
          type: string
      required:
      - day
    LoginUserDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
      - email
      - password
    TokenGenerationDto:
      type: object
      properties:
        email:
          type: string
      required:
      - email
    CreateRoleDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        resource:
          type: object
      required:
      - name
      - description
      - resource
    EditRoleDto:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        resource:
          type: object
paths:
  "/hello":
    get:
      operationId: AppController_getData
      parameters: []
      responses:
        '200':
          description: ''
  "/users":
    post:
      operationId: UsersController_register
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateUserDto"
      responses:
        '201':
          description: ''
      tags:
      - users
      security:
      - bearer: []
    get:
      operationId: UsersController_getUsers
      parameters:
      - name: limit
        required: false
        in: query
        schema:
          type: number
      - name: offset
        required: false
        in: query
        schema:
          type: number
      responses:
        '200':
          description: ''
      tags:
      - users
      security:
      - bearer: []
    put:
      operationId: UsersController_editUser
      parameters:
      - name: userId
        required: true
        in: query
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateUserDto"
      responses:
        '200':
          description: ''
      tags:
      - users
      security:
      - bearer: []
    delete:
      operationId: UsersController_deleteUser
      parameters:
      - name: userId
        required: true
        in: query
        schema:
          type: string
      responses:
        '200':
          description: ''
      tags:
      - users
      security:
      - bearer: []
  "/users/UserId":
    get:
      operationId: UsersController_getUser
      parameters:
      - name: userId
        required: true
        in: query
        schema:
          type: string
      responses:
        '200':
          description: ''
      tags:
      - users
      security:
      - bearer: []
  "/stats/stats-by-range":
    post:
      operationId: StatsController_statsByRange
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DateBraket"
      responses:
        '201':
          description: ''
      tags:
      - stats
  "/stats/item-status-changed":
    post:
      operationId: StatsController_itemResolved
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - stats
  "/stats/toxicity":
    post:
      operationId: StatsController_addToxicityStats
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - stats
  "/stats/created-vs-published":
    post:
      operationId: StatsController_createdVsPublished
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DayDto"
      responses:
        '201':
          description: ''
      tags:
      - stats
  "/stats/tickets-by-agent":
    post:
      operationId: StatsController_getTicketsByAgent
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DayDto"
      responses:
        '201':
          description: ''
      tags:
      - stats
  "/stats/tickets-by-source":
    post:
      operationId: StatsController_getTicketsBySource
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DateBraket"
      responses:
        '201':
          description: ''
      tags:
      - stats
  "/stats/tickets-by-status":
    post:
      operationId: StatsController_getTicketsByStatus
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DayDto"
      responses:
        '201':
          description: ''
      tags:
      - stats
  "/stats/tickets-by-tags":
    post:
      operationId: StatsController_getTicketsByTags
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DayDto"
      responses:
        '201':
          description: ''
      tags:
      - stats
  "/stats/tickets-by-type":
    post:
      operationId: StatsController_getTicketsByType
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DayDto"
      responses:
        '201':
          description: ''
      tags:
      - stats
  "/articles/save-article":
    post:
      operationId: ArticlesController_saveArticle
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - articles
  "/articles/articles":
    get:
      operationId: ArticlesController_getArticles
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - articles
  "/auth/login":
    post:
      operationId: AuthController_login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LoginUserDto"
      responses:
        '201':
          description: ''
      tags:
      - auth
  "/auth/wordpress":
    get:
      operationId: AuthController_samlLogin
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - auth
  "/auth/callback":
    post:
      operationId: AuthController_callback
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - auth
  "/auth/generateToken":
    post:
      operationId: AuthController_generateToken
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TokenGenerationDto"
      responses:
        '201':
          description: ''
      tags:
      - auth
      security:
      - bearer: []
  "/roles":
    post:
      operationId: RolesController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateRoleDto"
      responses:
        '201':
          description: ''
      tags:
      - roles
      security:
      - bearer: []
    get:
      operationId: RolesController_getRoles
      parameters:
      - name: limit
        required: false
        in: query
        schema:
          type: number
      - name: offset
        required: false
        in: query
        schema:
          type: number
      responses:
        '200':
          description: ''
      tags:
      - roles
      security:
      - bearer: []
    put:
      operationId: RolesController_editRole
      parameters:
      - name: roleId
        required: true
        in: query
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EditRoleDto"
      responses:
        '200':
          description: ''
      tags:
      - roles
      security:
      - bearer: []
    delete:
      operationId: RolesController_deleteRole
      parameters:
      - name: roleId
        required: true
        in: query
        schema:
          type: string
      responses:
        '200':
          description: ''
      tags:
      - roles
      security:
      - bearer: []
  "/roles/RoleId":
    get:
      operationId: RolesController_getRole
      parameters:
      - name: roleId
        required: true
        in: query
        schema:
          type: string
      responses:
        '200':
          description: ''
      tags:
      - roles
      security:
      - bearer: []
