    
image:
  name: atlassian/pipelines-awscli:1.18.190

options:
  size: 2x
  docker: true

definitions:
  services:
    docker:
      memory: 4096

  checkRepo: &checkRepo
    name: Check & create repo
    script:
      - REPO=$(aws ecr describe-repositories --region eu-west-1 --query "repositories[?repositoryName=='${BITBUCKET_REPO_SLUG}'].repositoryName" --output text)
      - if [[ -z $REPO ]]; then aws ecr create-repository --region eu-west-1 --repository-name $BITBUCKET_REPO_SLUG; fi

  buildPush: &buildPushTag
    name: Build & Push
    caches:
      - docker
    services:
      - docker
    script:
      - export IMAGE_NAME=$CWH_ECR/$BITBUCKET_REPO_SLUG
      - export IMAGE_NAME_TAG=$IMAGE_NAME:$BITBUCKET_TAG
      - aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin $CWH_ECR
      - docker build --memory 2G  --memory-swap 4G -t $IMAGE_NAME_TAG-api -f apps/api/Dockerfile-prod .
      - docker push $IMAGE_NAME_TAG-api
      - docker build -t $IMAGE_NAME_TAG-iverify -f apps/iverify/Dockerfile  .
      - docker push $IMAGE_NAME_TAG-iverify
      - docker build -t $IMAGE_NAME_TAG-triage -f apps/triage/Dockerfile-prod .
      - docker push $IMAGE_NAME_TAG-triage
      - docker build -t $IMAGE_NAME_TAG-publisher -f apps/publisher/Dockerfile-prod .
      - docker push $IMAGE_NAME_TAG-publisher
  iverifybuildFrontDev: &iverifybuildFrontDev
    name: Build Iverify
    image:
        name: node:14.17.1 
    script:
      - export IMAGE_NAME=$CWH_ECR/$BITBUCKET_REPO_SLUG
      - export IMAGE_NAME_TAG=$IMAGE_NAME:$BITBUCKET_BUILD_NUMBER
      - npm install npm@latest -g
      - apt-get update 
      - apt-get install -y libgtk2.0-0   libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 xvfb
      - cd apps/iverify
      - npm install
      - npm install font-awesome
      - export PATH=node_modules/.bin:$PATH
      - npm install -g @angular/cli
      - npm install -g nx
      - ng build iverify
      - cd ../../
      - npm install
      - nx build triage 
      - nx build publisher
    artifacts: 
        - dist/**


  iverifybuild: &iverifybuild
    name: Build Iverify
    image:
        name: node:14.17.1 
    script:
      - export IMAGE_NAME=$CWH_ECR/$BITBUCKET_REPO_SLUG
      - export IMAGE_NAME_TAG=$IMAGE_NAME:$BITBUCKET_TAG
      - npm install npm@latest -g
      - apt-get update 
      - apt-get install -y libgtk2.0-0   libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 xvfb
      - cd apps/iverify
      - npm install
      - npm install font-awesome
      - export PATH=node_modules/.bin:$PATH
      - npm install -g @angular/cli
      - npm install -g nx
      - ng build iverify --configuration=production
      - cd ../../
      - npm install
      - nx build triage 
      - nx build publisher
    artifacts: 
      - dist/**

  build: &build
    name: Build
    caches:
      - docker
    script:
      - export IMAGE_NAME_TAG=build
      - docker build --memory 2G  --memory-swap 4G -t $IMAGE_NAME_TAG-api -f apps/api/Dockerfile-prod .
      - docker build -t $IMAGE_NAME_TAG-iverify -f apps/iverify/Dockerfile  .
      - docker build -t $IMAGE_NAME_TAG-triage -f apps/triage/Dockerfile-prod .
      - docker build -t $IMAGE_NAME_TAG-publisher -f apps/publisher/Dockerfile-prod .

pipelines:
  branches:
    master:
      - step: 
          size: 2x
          <<: *iverifybuildFrontDev
      - step: 
          services:
            - docker
          <<: *build
  tags:
    'dev*':
      - step: 
          *checkRepo
      - step: 
          size: 2x
          <<: *iverifybuildFrontDev
      - step: 
          services:
            - docker
          <<: *buildPushTag
    'v*':
      - step: 
          *checkRepo
      - step: 
          size: 2x
          <<: *iverifybuild
      - step: 
          services:
            - docker
          <<: *buildPushTag


